{
  "swagger": "2.0",
  "info": {
    "title": "API v0.1",
    "version": "v0.1",
    "contact": {
      "name": "Mapotempo support",
      "email": "tech@mapotempo.com",
      "url": "https://github.com/Mapotempo/fleet-api"
    },
    "license": {
      "name": "GNU Affero General Public License 3",
      "url": "https://raw.githubusercontent.com/Mapotempo/fleet-api/master/LICENSE"
    },
    "description": "\n## Overview\nThe purpose of this API is to be an interface to Couchbase/SyncGateway and ease communication with mobile.\n\n## Model\nModel is structured around three majors concepts: Company, User and Mission.\n* `Company`: main object for all other elements, all models must have a reference to a company. The Company has many users, each user has his own `api_key` to make API call. To create or mutate a company, an `admin` account must be used with its own API key.\n\n* `User`: user can make API call (through an API key) or connect to a mobile device.\n  * Each `user` has a `current location` which tracks mobile location. The location s updated only by the mobile.\n  * All users from a company, share common settings through `user settings` model.\n  * For mobile be able to update theses models (through SyncGateway), user must have declared roles. The default roles are: mission.updating, mission.deleting, mission_status.creating, mission_status.updating, mission_status.deleting, user_settings.creating, user_settings.updating, user_current_location.creating, user_current_location.updating, user_track.creating, user_track.updating.\n\n* `Mission`: describe the mission that the user must realize.\n  * Each `Mission` have an associated `mission status type` which describe its current state.\n  * To switch to another status, a `mission status action` is used to declare the links between statuses.\n  * Finally, to keep mission status history, each `mission` has many `mission status`.\n  * Due to the SyncGateway process, a `mission placeholder` is created or updated each time a mission is saved to keep mobile in a correct sync state. This model must not be called directly.\n\nIn order to know the next status available, a default workflow is defined when creating a company. It follows this pattern:\n* `To do` => `In progress`\n* `To do` => `Uncompleted`\n\n* `In progress` => `To do`\n* `In progress` => `Completed`\n* `In progress` => `Uncompleted`\n\n* `Uncompleted` => `To do`\n\n## Technical access\n### Swagger descriptor\nThis REST API is described with Swagger. The Swagger descriptor defines the request end-points, the parameters and the return values. The API can be addressed by HTTP request or with a generated client using the Swagger descriptor.\n### API key\nAll access to the API are subject to an `api_key` parameter in order to authenticate the user. This parameter must be sent in header with the following form: `\"Token token=user_api_key\"`\n### Return\nThe API supports one return format: `json`.\n"
  },
  "definitions": {
    "company": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "location": {
      "type": "object",
      "properties": {
        "lat": {
          "type": "string"
        },
        "lon": {
          "type": "string"
        }
      }
    },
    "address": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "postalcode": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "street": {
          "type": "string"
        }
      }
    },
    "time_windows": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          }
        }
      }
    },
    "user_required": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "sync_user",
        "email",
        "password"
      ]
    },
    "user": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "mission_required": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/location"
        },
        "comment": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "duration": {
          "type": "number"
        },
        "address": {
          "$ref": "#/definitions/address"
        },
        "time_windows": {
          "$ref": "#/definitions/time_windows"
        }
      },
      "required": [
        "name",
        "date",
        "location"
      ]
    },
    "mission": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/location"
        },
        "comment": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "duration": {
          "type": "number"
        },
        "address": {
          "$ref": "#/definitions/address"
        },
        "time_windows": {
          "$ref": "#/definitions/time_windows"
        }
      }
    }
  },
  "paths": {
    "/companies": {
      "get": {
        "summary": "Get all companies",
        "tags": [
          "Companies"
        ],
        "operationId": "getCompanies",
        "description": "Return all companies (admin account required)",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "all companies"
          },
          "401": {
            "description": "bad token"
          }
        }
      },
      "post": {
        "summary": "Creates a company",
        "tags": [
          "Companies"
        ],
        "operationId": "createCompanies",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "company",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/company"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "company created with admin user"
          },
          "422": {
            "description": "invalid request"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    },
    "/mission_status_actions": {
      "get": {
        "summary": "Retrieves all mission status actions for a user",
        "tags": [
          "Mission Status Actions"
        ],
        "operationId": "getMissionStatusActions",
        "description": "Retrieves all mission status actions for a user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user mission status actions found"
          },
          "404": {
            "description": "user not found"
          },
          "401": {
            "description": "bad token"
          }
        }
      },
      "post": {
        "summary": "Creates a mission status action for a user",
        "tags": [
          "Mission Status Actions"
        ],
        "operationId": "createMissionStatusAction",
        "description": "Creates a mission status action for a user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "mission_status_action",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "group": {
                  "type": "string"
                },
                "previous_mission_status_type_id": {
                  "type": "string"
                },
                "next_mission_status_type_id": {
                  "type": "string"
                }
              },
              "required": [
                "label",
                "previous_mission_status_type_id",
                "next_mission_status_type_id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user mission status action created"
          },
          "422": {
            "description": "invalid request"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    },
    "/mission_status_actions/{id}": {
      "put": {
        "summary": "Updates a mission status action for a user",
        "tags": [
          "Mission Status Actions"
        ],
        "operationId": "updateMissionStatusAction",
        "description": "Updates a mission status action for a user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "sync_user",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "mission_status_action",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "group": {
                  "type": "string"
                },
                "previous_mission_status_type_id": {
                  "type": "string"
                },
                "next_mission_status_type_id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user mission status action updated"
          },
          "422": {
            "description": "invalid request"
          },
          "401": {
            "description": "bad token"
          }
        }
      },
      "delete": {
        "summary": "Deletes a mission status type for a user",
        "tags": [
          "Mission Status Actions"
        ],
        "operationId": "deleteMissionStatusAction",
        "description": "Deletes a mission status type for a user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "sync_user",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user mission status type deleted"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    },
    "/mission_status_types": {
      "get": {
        "summary": "Retrieves all mission status types for a user",
        "tags": [
          "Mission Status Types"
        ],
        "operationId": "getMissionStatusTypes",
        "description": "Retrieves all mission status types for a user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user mission status types found"
          },
          "404": {
            "description": "user not found"
          },
          "401": {
            "description": "bad token"
          }
        }
      },
      "post": {
        "summary": "Creates a mission status type for a user",
        "tags": [
          "Mission Status Types"
        ],
        "operationId": "createMissionStatusType",
        "description": "Creates a mission status type for a user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "mission_status_type",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "color": {
                  "type": "string"
                }
              },
              "required": [
                "label"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user mission status type created"
          },
          "422": {
            "description": "invalid request"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    },
    "/mission_status_types/{id}": {
      "put": {
        "summary": "Updates a mission status type for a user",
        "tags": [
          "Mission Status Types"
        ],
        "operationId": "updateMissionStatusType",
        "description": "Updates a mission status type for a user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "sync_user",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "mission_status_type",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "color": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user mission status type updated"
          },
          "422": {
            "description": "invalid request"
          },
          "401": {
            "description": "bad token"
          }
        }
      },
      "delete": {
        "summary": "Deletes a mission status type for a user",
        "tags": [
          "Mission Status Types"
        ],
        "operationId": "deleteMissionStatusType",
        "description": "Deletes a mission status type for a user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "sync_user",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user mission status type deleted"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    },
    "/missions": {
      "get": {
        "summary": "Get all missions",
        "tags": [
          "Missions"
        ],
        "operationId": "getMissions",
        "description": "Retrieves all missions from the company of the current user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "all missions"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    },
    "/user_current_locations": {
      "get": {
        "summary": "Get all current locations",
        "tags": [
          "Current Locations"
        ],
        "operationId": "getUserCurrentLocations",
        "description": "Retrieves all current locations of users from the company of the current user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "all current locations"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "Users"
        ],
        "operationId": "getUsers",
        "description": "Retrieves all users from the company of the current user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "with_vehicle",
            "in": "query",
            "type": "boolean",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "all users"
          },
          "401": {
            "description": "bad token"
          }
        }
      },
      "post": {
        "summary": "Creates a user",
        "tags": [
          "Users"
        ],
        "operationId": "createUser",
        "description": "Create a new user in the current company",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user created"
          },
          "422": {
            "description": "invalid request"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    },
    "/users/{sync_user}": {
      "get": {
        "summary": "Retrieves a user",
        "tags": [
          "Users"
        ],
        "operationId": "getUser",
        "description": "Retrieves a user in the current company",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user found"
          },
          "404": {
            "description": "user not found"
          },
          "401": {
            "description": "bad token"
          }
        }
      },
      "put": {
        "summary": "Updates a user",
        "tags": [
          "Users"
        ],
        "operationId": "updateUser",
        "description": "Updates a user in the current company",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user updated"
          },
          "422": {
            "description": "invalid request"
          },
          "401": {
            "description": "bad token"
          }
        }
      },
      "delete": {
        "summary": "Deletes a user",
        "tags": [
          "Users"
        ],
        "operationId": "deleteUser",
        "description": "Deletes a user in the current company",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user deleted"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    },
    "/users/{sync_user}/company": {
      "get": {
        "summary": "Retrieves a company of a user",
        "tags": [
          "Users"
        ],
        "operationId": "getUserCompany",
        "description": "Retrieves the company of the current user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user company found"
          },
          "404": {
            "description": "user not found"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    },
    "/users/{sync_user}/current_location": {
      "get": {
        "summary": "Retrieves the current location of a user",
        "tags": [
          "Users"
        ],
        "operationId": "getUserUserCurrentLocation",
        "description": "Retrieves the current location of the current user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user current location found"
          },
          "404": {
            "description": "user current location not found"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    },
    "/users/{sync_user}/missions": {
      "get": {
        "summary": "Retrieves all missions of a user",
        "tags": [
          "Users"
        ],
        "operationId": "getUserMissions",
        "description": "Retrieves all missions of the current user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user missions found"
          },
          "404": {
            "description": "user not found"
          },
          "401": {
            "description": "bad token"
          }
        }
      },
      "post": {
        "summary": "Creates a mission for a user",
        "tags": [
          "Users"
        ],
        "operationId": "createUserMission",
        "description": "Creates a mission for the current user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "mission",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/mission_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user mission created"
          },
          "422": {
            "description": "invalid request"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    },
    "/users/{sync_user}/missions/create_multiples": {
      "post": {
        "summary": "Creates a list of missions for a user",
        "tags": [
          "Users"
        ],
        "operationId": "createUserMissions",
        "description": "Creates a set of missions for the current user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "mission",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/mission_required"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user mission created"
          },
          "422": {
            "description": "invalid request"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    },
    "/users/{sync_user}/missions/destroy_multiples": {
      "delete": {
        "summary": "Deletes a list of missions for a user",
        "tags": [
          "Users"
        ],
        "operationId": "destroyUserMissions",
        "description": "Deletes a set of missions for the current user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "start_date",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "end_date",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "204": {
            "description": "user missions deleted"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    },
    "/users/{sync_user}/missions/{id}": {
      "put": {
        "summary": "Updates a mission of a user",
        "tags": [
          "Users"
        ],
        "operationId": "updateUserMission",
        "description": "Updates a mission belonging to the current user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "mission",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/mission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user mission updated"
          },
          "422": {
            "description": "invalid request"
          },
          "401": {
            "description": "bad token"
          }
        }
      },
      "delete": {
        "summary": "Deletes a mission of a user",
        "tags": [
          "Users"
        ],
        "operationId": "deleteUserMission",
        "description": "Deletes a mission belonging to the current user",
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "sync_user",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user mission deleted"
          },
          "401": {
            "description": "bad token"
          }
        }
      }
    }
  },
  "basePath": "/api/0.1",
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}